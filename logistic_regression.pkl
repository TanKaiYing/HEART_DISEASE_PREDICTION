# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

df = pd.read_csv('data_cleaned_final.csv')

# Select predictors and outcome variable
predictors = df[['AgeCategory', 'SmokerStatus', 'HadStroke', 'HadCOPD', 'HadArthritis', 'HadKidneyDisease', 'HadKidneyDisease', 'HadAngina']
]
outcome = df['HadHeartAttack']          
            
# Convert categorical variables to numerical using one-hot encoding
predictors = pd.get_dummies(predictors, drop_first=True)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(predictors, outcome, test_size=0.2, random_state=42)

# Standardize the data
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Create and train the logistic regression model
model = LogisticRegression()
model.fit(X_train_scaled, y_train)

# Make predictions on the test set
predictions = model.predict(X_test_scaled)

# Evaluate the model
print("Confusion Matrix:")
print(confusion_matrix(y_test, predictions))
print("\nClassification Report:")
print(classification_report(y_test, predictions))
print("\nAccuracy Score:")
print(accuracy_score(y_test, predictions))
